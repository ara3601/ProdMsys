# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Set up Maven
      run: mvn -B package --file pom.xml
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Set up AWS CLI
      uses: aws-actions/setup-aws-cli@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: springdemo-app:latest 563777167083.dkr.ecr.ap-south-1.amazonaws.com/springdemo-app:latest



    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/aws-login@v1
      with:
        registry: ${{ steps.login-ecr.outputs.registry }}

    - name: Push Docker Image
      uses: docker/push-action@v1
      with:
        context: ${{ env.IMAGE_NAME }}
        tags: ${{ env.AWS_REGION }}.dkr.ecr.aws/${{ env.IMAGE_NAME }}:${{ env.TAG }}
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: springdemo-app
        DOCKER_TAG: latest
         
 
  
